{"version":3,"sources":["services/image-api.js","components/Modal/Modal.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Api","fetchImages","searchQuery","page","axios","get","then","data","hits","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","currentTarget","target","window","addEventListener","this","removeEventListener","createPortal","className","s","overlay","onClick","modal","src","largeImageURL","alt","Component","Searchbar","state","query","handleSubmit","preventDefault","trim","onSubmit","setState","toast","handleChange","value","type","autoComplete","autoFocus","placeholder","onChange","ImageGalleryItem","webformatURL","getLargeImageURL","galleryItem","ImageGalleryItem_image","ImageGallery","images","onSelect","map","image","tags","id","Loader","width","height","fill","color","viewBox","xmlns","label","y","rx","attributeName","begin","dur","values","calcMode","repeatCount","x","defaultProps","App","loading","error","showModal","selectedImage","toggleModal","handleSelectImage","imageUrl","console","log","isLoading","prevState","catch","finally","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b1aff20b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst key='21726262-6f53751bde553225c4af8487e';\r\nconst url='https://pixabay.com/api/';\r\n\r\n function fetchImages({ searchQuery = '', page = 1}){\r\n    return  axios\r\n    .get(\r\n        `${url}?q=${searchQuery}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\r\n        )\r\n        .then(({data})=>data.hits)\r\n};\r\n\r\n\r\nconst Api={\r\n    fetchImages,\r\n}\r\nexport default Api;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keyDown', this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keyDown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className={s.overlay} onClick={this.handleBackdropClick}>\r\n        <div className={s.modal} >\r\n        <img src={this.props.largeImageURL} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport {toast} from 'react-toastify';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n      query:'',\r\n  };\r\n\r\n  handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    if(this.state.query.trim()===\"\"){\r\n        toast(\"Введите название картинки\");\r\n        return;\r\n    }\r\n   this.props.onSubmit(this.state.query);\r\n   this.setState({query:''});\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      query:e.currentTarget.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ webformatURL,largeImageURL,alt=\"\",getLargeImageURL}) => {\r\n  \r\n  return (\r\n    <li className={s.galleryItem} >\r\n      <img\r\n        src={webformatURL}\r\n        alt={alt}\r\n        className={s.ImageGalleryItem_image} \r\n        onClick={()=>getLargeImageURL(largeImageURL)} \r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    alt: PropTypes.string,\r\n    getLargeImageURL: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nconst ImageGallery = ({images,onSelect}) => {\r\n  return (\r\n    <ul className={s.ImageGallery} >\r\n        {images.map(image=>(\r\n        \r\n        <ImageGalleryItem \r\n        key={image.id}\r\n        webformatURL={image.webformatURL}\r\n        largeImageURL={image.largeImageURL}\r\n        alt={image.tags}\r\n        getLargeImageURL={onSelect}\r\n        />\r\n         \r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onSelect: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Loader = props => (\r\n  <svg\r\n    width={props.width}\r\n    height={props.height}\r\n    fill={props.color}\r\n    viewBox=\"0 0 135 140\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-label={props.label}\r\n  >\r\n    <rect y=\"10\" width=\"15\" height=\"120\" rx=\"6\">\r\n      <animate\r\n        attributeName=\"height\"\r\n        begin=\"0.5s\"\r\n        dur=\"1s\"\r\n        values=\"120;110;100;90;80;70;60;50;40;140;120\"\r\n        calcMode=\"linear\"\r\n        repeatCount=\"indefinite\"\r\n      />\r\n      <animate\r\n        attributeName=\"y\"\r\n        begin=\"0.5s\"\r\n        dur=\"1s\"\r\n        values=\"10;15;20;25;30;35;40;45;50;0;10\"\r\n        calcMode=\"linear\"\r\n        repeatCount=\"indefinite\"\r\n      />\r\n    </rect>\r\n    <rect x=\"30\" y=\"10\" width=\"15\" height=\"120\" rx=\"6\">\r\n      <animate\r\n        attributeName=\"height\"\r\n        begin=\"0.25s\"\r\n        dur=\"1s\"\r\n        values=\"120;110;100;90;80;70;60;50;40;140;120\"\r\n        calcMode=\"linear\"\r\n        repeatCount=\"indefinite\"\r\n      />\r\n      <animate\r\n        attributeName=\"y\"\r\n        begin=\"0.25s\"\r\n        dur=\"1s\"\r\n        values=\"10;15;20;25;30;35;40;45;50;0;10\"\r\n        calcMode=\"linear\"\r\n        repeatCount=\"indefinite\"\r\n      />\r\n    </rect>\r\n    <rect x=\"60\" width=\"15\" height=\"140\" rx=\"6\">\r\n      <animate\r\n        attributeName=\"height\"\r\n        begin=\"0s\"\r\n        dur=\"1s\"\r\n        values=\"120;110;100;90;80;70;60;50;40;140;120\"\r\n        calcMode=\"linear\"\r\n        repeatCount=\"indefinite\"\r\n      />\r\n      <animate\r\n        attributeName=\"y\"\r\n        begin=\"0s\"\r\n        dur=\"1s\"\r\n        values=\"10;15;20;25;30;35;40;45;50;0;10\"\r\n        calcMode=\"linear\"\r\n        repeatCount=\"indefinite\"\r\n      />\r\n    </rect>\r\n    <rect x=\"90\" y=\"10\" width=\"15\" height=\"120\" rx=\"6\">\r\n      <animate\r\n        attributeName=\"height\"\r\n        begin=\"0.25s\"\r\n        dur=\"1s\"\r\n        values=\"120;110;100;90;80;70;60;50;40;140;120\"\r\n        calcMode=\"linear\"\r\n        repeatCount=\"indefinite\"\r\n      />\r\n      <animate\r\n        attributeName=\"y\"\r\n        begin=\"0.25s\"\r\n        dur=\"1s\"\r\n        values=\"10;15;20;25;30;35;40;45;50;0;10\"\r\n        calcMode=\"linear\"\r\n        repeatCount=\"indefinite\"\r\n      />\r\n    </rect>\r\n    <rect x=\"120\" y=\"10\" width=\"15\" height=\"120\" rx=\"6\">\r\n      <animate\r\n        attributeName=\"height\"\r\n        begin=\"0.5s\"\r\n        dur=\"1s\"\r\n        values=\"120;110;100;90;80;70;60;50;40;140;120\"\r\n        calcMode=\"linear\"\r\n        repeatCount=\"indefinite\"\r\n      />\r\n      <animate\r\n        attributeName=\"y\"\r\n        begin=\"0.5s\"\r\n        dur=\"1s\"\r\n        values=\"10;15;20;25;30;35;40;45;50;0;10\"\r\n        calcMode=\"linear\"\r\n        repeatCount=\"indefinite\"\r\n      />\r\n    </rect>\r\n  </svg>\r\n);\r\n\r\nLoader.propTypes = {\r\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  color: PropTypes.string,\r\n  label: PropTypes.string\r\n};\r\n\r\nLoader.defaultProps = {\r\n  height: 80,\r\n  width: 80,\r\n  color: \"green\",\r\n  label: \"audio-loading\"\r\n};\r\nexport default Loader;","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Api from './services/image-api';\nimport Modal from './components/Modal/Modal';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\n\nimport Loader from './components/Loader/Loader';\n\nclass App extends Component {\n  state = {\n    images: [],\n    loading: false,\n    error: null,\n    showModal: false,\n    searchQuery: '',\n    page: 1,\n    selectedImage: \"\",\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.fetchImages();\n    }\n    if (this.state.page !== 2 && prevState.page !== this.state.page) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  handleSelectImage = imageUrl => {\n    this.setState({ selectedImage: imageUrl });\n    this.toggleModal();\n  };\n\n  handleSubmit = query => {\n    this.setState({ images: [], searchQuery: query, page: 1 });\n    console.log(query);\n    console.log(this.state.searchQuery);\n  };\n\n  fetchImages = () => {\n    const {searchQuery, page} = this.state;\n    this.setState({ isLoading: true });\n    Api.fetchImages(searchQuery, page)\n      .then(hits => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...hits],\n          page: prevState.page + 1,\n        }));\n      })\n      .catch(error => this.setState({ error: 'No match!' }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    const { images, loading, selectedImage } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.handleSubmit} />\n\n        <ImageGallery images={images} onSelect={this.handleSelectImage} />\n        {loading && <Loader />}\n        {selectedImage && (\n          <Modal onClose={this.toggleModal} largeImageURL={selectedImage}>   \n          </Modal>\n        )}\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}